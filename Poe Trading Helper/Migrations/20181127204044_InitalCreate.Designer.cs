// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PoeTradingHelper.Backend.DAL;

namespace PoeTradingHelper.Migrations
{
    [DbContext(typeof(TradingContext))]
    [Migration("20181127204044_InitalCreate")]
    partial class InitalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PoeTradingHelper.Backend.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PoeNinjaId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("PoeTradingHelper.Backend.Models.CurrencyRatio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("GetAmount");

                    b.Property<int?>("GetId");

                    b.Property<float>("PayAmount");

                    b.Property<int?>("PayId");

                    b.HasKey("Id");

                    b.HasIndex("GetId");

                    b.HasIndex("PayId");

                    b.ToTable("CurrencyRatios");
                });

            modelBuilder.Entity("PoeTradingHelper.Backend.Models.DivinationCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CardsPerSet");

                    b.Property<string>("FlavorText");

                    b.Property<int>("PoeNinjaId");

                    b.Property<string>("Name");

                    b.Property<int?>("PriceId");

                    b.HasKey("Id");

                    b.HasIndex("PriceId");

                    b.ToTable("DivinationCards");
                });

            modelBuilder.Entity("PoeTradingHelper.Backend.Models.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("PriceInChaos");

                    b.Property<float>("PriceInExalted");

                    b.HasKey("Id");

                    b.ToTable("Price");
                });

            modelBuilder.Entity("PoeTradingHelper.Backend.Models.CurrencyRatio", b =>
                {
                    b.HasOne("PoeTradingHelper.Backend.Models.Currency", "Get")
                        .WithMany()
                        .HasForeignKey("GetId");

                    b.HasOne("PoeTradingHelper.Backend.Models.Currency", "Pay")
                        .WithMany()
                        .HasForeignKey("PayId");
                });

            modelBuilder.Entity("PoeTradingHelper.Backend.Models.DivinationCard", b =>
                {
                    b.HasOne("PoeTradingHelper.Backend.Models.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId");
                });
#pragma warning restore 612, 618
        }
    }
}
